# ########################################
# common properties
# ########################################

export VAULT_PROGRAMME=pocs
export VAULT_ENVIRONMENT=dev

export VAULT_DEV_ROOT_TOKEN_ID=myroot
export VAULT_ADDR=http://127.0.0.1:1234

export VAULT_ROOT_PKI_NAME=myorg
export VAULT_ROOT_COMMON_NAME=myorg.com

export VAULT_ROOT_CERTIFICATE_CRT_FILE="root_CA_"$VAULT_ROOT_PKI_NAME".crt"
export VAULT_ROOT_CERTIFICATE_SERIAL_FILE="root_CA_"$VAULT_ROOT_PKI_NAME".serial"
export VAULT_ROOT_CERTIFICATE_KEY_FILE="root_CA_"$VAULT_ROOT_PKI_NAME".key"

export VAULT_INTERMEDIATE_PKI_NAME="$VAULT_ROOT_PKI_NAME"_"$VAULT_PROGRAMME"_"$VAULT_ENVIRONMENT"
export VAULT_INTERMEDIATE_COMMON_NAME="$VAULT_ENVIRONMENT"."$VAULT_PROGRAMME"."$VAULT_ROOT_COMMON_NAME"

export INTERMEDIATE_CERTIFICATE_CRT_FILE=$VAULT_INTERMEDIATE_PKI_NAME".crt"
export INTERMEDIATE_CERTIFICATE_ISSUINGCA_FILE=$VAULT_INTERMEDIATE_PKI_NAME".issuing_ca.crt"
export INTERMEDIATE_CERTIFICATE_SERIAL_FILE=$VAULT_INTERMEDIATE_PKI_NAME".serial"
export INTERMEDIATE_CERTIFICATE_KEY_FILE=$VAULT_INTERMEDIATE_PKI_NAME".key"
export INTERMEDIATE_CERTIFICATE_CRT_FILE_BUNDLE=$INTERMEDIATE_CERTIFICATE_CRT_FILE".bundle"

export K8S_INTERMEDIATE_SECRET_NAME=$(echo $(echo $VAULT_INTERMEDIATE_PKI_NAME | tr "." "-" | tr "_" "-" )"-secret")

export VAULT_ROLE_NAME=$(echo $VAULT_INTERMEDIATE_COMMON_NAME | tr "." "-")
#dont prefix following line with *. or identity generation will fail
export VAULT_ROLE_ALLOWED_DOMAINS=$VAULT_INTERMEDIATE_COMMON_NAME

export VAULT_IDENTITY_CERTIFICATE_COMMON_NAME=httpbin."$VAULT_INTERMEDIATE_COMMON_NAME"
export IDENTITY_CERTIFICATE_VAULT_RESPONSE_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".vault.response.json")
export IDENTITY_CERTIFICATE_CRT_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".crt")
export IDENTITY_CERTIFICATE_KEY_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".key")
export IDENTITY_CERTIFICATE_SERIAL_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".serial")
export IDENTITY_CERTIFICATE_CA_CHAIN_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".ca_chain")
export K8S_IDENTITY_SECRET_NAME=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")"-mtls-secret")


export IDENTITY_CERTIFICATE_ISSUING_CA_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".issuing_ca")
export IDENTITY_CERTIFICATE_SSL_CERT_FILE=$(echo $(echo $VAULT_IDENTITY_CERTIFICATE_COMMON_NAME | tr "." "-")".ssl_cert")
export K8S_NAMESPACE_NAME=$VAULT_PROGRAMME$VAULT_ENVIRONMENT

#GET CERT ID FROM K8S SECRET
#CERT_ID=$(kubectl get secret rabbitmq-dev-dev2-cds-eis-com-secret  -n cdsdev2 -o=jsonpath="{.data.serial}" | base64 -d)

#GET CERT FROM VAULT
#curl $VAULT_ADDR/v1/$VAULT_INTERMEDIATE_PKI_NAME/cert/$CERT_ID | jq -r ".data.certificate"

mkdir tmp
cd tmp